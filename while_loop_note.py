# while_loop_note.py
# Created by ChatGPT
# Date: 2025-10-31
# Description: examples of Python while loop

# ---------------------------------------------------------
# üéØ Purpose:
# This file explains everything about the Python "while loop":
# - basic structure
# - condition checking
# - break, continue, else
# - nested loops
# - infinite loop
# - user input example
# - using while loop for number, list, string
# ---------------------------------------------------------


# üü© 1Ô∏è‚É£ Basic while loop ‚Äî print numbers from 1 to 10
i = 1
while i <= 10:
    print(i)
    i += 1
# Explanation:
# while i <= 10 ‚Üí loop ‡¶ö‡¶≤‡¶¨‡ßá ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ i ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶® 10 ‡¶¨‡¶æ ‡¶§‡¶æ‡¶∞ ‡¶ï‡¶Æ ‡¶•‡¶æ‡¶ï‡ßá
# i += 1 ‚Üí ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¨‡¶æ‡¶∞ ‡ßß ‡¶ï‡¶∞‡ßá ‡¶¨‡¶æ‡ßú‡ßá
# ---------------------------------------------------------


# üü¶ 2Ô∏è‚É£ while loop with step value (even numbers)
i = 2
while i <= 10:
    print("Even number:", i)
    i += 2
# ---------------------------------------------------------


# üü® 3Ô∏è‚É£ Reverse loop
i = 10
while i > 0:
    print("Reverse:", i)
    i -= 1
# ---------------------------------------------------------


# üüß 4Ô∏è‚É£ Using if condition inside while loop
i = 1
while i <= 5:
    if i % 2 == 0:
        print(i, "is even")
    else:
        print(i, "is odd")
    i += 1
# ---------------------------------------------------------


# üü• 5Ô∏è‚É£ Using break ‚Äî stop the loop early
i = 1
while i <= 10:
    if i == 5:
        print("Loop stopped at", i)
        break
    print("Number:", i)
    i += 1
# break ‚Üí stops the loop immediately
# ---------------------------------------------------------


# üü™ 6Ô∏è‚É£ Using continue ‚Äî skip a specific step
i = 0
while i < 5:
    i += 1
    if i == 3:
        continue
    print("Value:", i)
# continue ‚Üí skips current iteration
# ---------------------------------------------------------


# üü´ 7Ô∏è‚É£ Using else with while loop
i = 1
while i < 4:
    print(i)
    i += 1
else:
    print("Loop finished successfully!")
# else ‚Üí runs only if loop ends normally (no break)
# ---------------------------------------------------------


# ‚¨õ 8Ô∏è‚É£ Nested while loop ‚Äî loop inside another loop
i = 1
while i <= 3:
    j = 1
    while j <= 2:
        print(f"i = {i}, j = {j}")
        j += 1
    i += 1
# ---------------------------------------------------------


# üü® 9Ô∏è‚É£ Calculate the sum of numbers
total = 0
i = 1
while i <= 5:
    total += i
    i += 1
print("Sum from 1 to 5:", total)
# ---------------------------------------------------------


# üü© üîü While loop with list
fruits = ["apple", "banana", "mango"]
i = 0
while i < len(fruits):
    print("Fruit:", fruits[i])
    i += 1
# ---------------------------------------------------------


# üü¶ 1Ô∏è‚É£1Ô∏è‚É£ Infinite loop (‚ö†Ô∏è Example only, use carefully!)
# This will run forever unless manually stopped
# Uncomment to test (‚ö†Ô∏è Warning: runs infinitely!)
# while True:
#     print("This loop runs forever! Press Ctrl+C to stop.")
# ---------------------------------------------------------


# üüß 1Ô∏è‚É£2Ô∏è‚É£ User input with while loop
# This loop will keep asking until correct input is given
password = ""
while password != "1234":
    password = input("Enter password: ")
print("Access granted!")
# ---------------------------------------------------------


# ‚úÖ Summary:
# ---------------------------------------------------------
# üîπ while loop ‚Äî used when you don't know exactly how many times to iterate
# üîπ condition ‚Äî loop runs while condition is True
# üîπ break ‚Äî stops the loop immediately
# üîπ continue ‚Äî skips one iteration
# üîπ else ‚Äî runs when the loop finishes without break
# üîπ nested loop ‚Äî loop inside another loop
# üîπ infinite loop ‚Äî runs forever until manually stopped
# üîπ user input ‚Äî useful for validation and repetition
# ---------------------------------------------------------
